version: '3.8'

services:
  # SQLite Database (using volume mount for persistence)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: career-portfolio-backend-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: file:./prisma/prod.db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 5001
      CORS_ORIGIN: ${CORS_ORIGIN:-https://localhost}
      DOMAIN: ${DOMAIN:-localhost}
    volumes:
      - sqlite_data:/app/prisma
      - ./server/logs:/app/logs
    # user: "1001:1001"  # Disabled to allow root initialization
    ports:
      - "5001:5001"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: career-portfolio-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # Frontend Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: career-portfolio-frontend-prod
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: career-portfolio-nginx-prod
    ports:
      - "8443:443"
      - "8080:80"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network



volumes:
  sqlite_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge 